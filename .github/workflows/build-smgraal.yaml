name: Build GraalVM from Source

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Set up environment variables
      shell: bash
      run: |
        echo "GRAALVM_HOME=${{ github.workspace }}/graalvm" >> ${GITHUB_ENV}
        echo "LABSJDK_HOME=${{ github.workspace }}/labsjdk" >> ${GITHUB_ENV}
        echo "MX_GIT_CACHE=refcache" >> ${GITHUB_ENV}
        echo "MX_PATH=${{ github.workspace }}/mx" >> ${GITHUB_ENV}
        echo "MX_PYTHON=python3" >> ${GITHUB_ENV}
        echo "LANG=en_US.UTF-8" >> ${GITHUB_ENV}

    - name: Clone GraalVM Source
      run: |
        git clone --depth 1 https://github.com/oracle/graal.git graalvm

    - name: Clone mx Tool
      run: |
        git clone --depth 1 https://github.com/graalvm/mx.git
        echo "$(pwd)/mx" >> $GITHUB_PATH  # Add mx to PATH for all steps

    - name: Install Other Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential zlib1g-dev libffi-dev jq

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'  # Use the latest available Python 3

    - name: Update mx Cache
      uses: actions/cache@v4
      with:
        path: ~/.mx
        key: ${{ runner.os }}-mx-${{ hashFiles('**/suite.py') }}
        restore-keys: ${{ runner.os }}-mx-

    - name: Fetch Latest LabsJDK
      shell: bash
      run: |
        mkdir jdk-dl
        # Use the latest version of LabsJDK
        ${MX_PATH}/mx fetch-jdk --jdk-id labsjdk-ce-latest --to jdk-dl --alias ${LABSJDK_HOME}

    - name: Build GraalVM JDK
      shell: bash
      run: |
        cd graalvm  # Navigate to the compiler directory
        export JVMCI_VERSION_CHECK="ignore"
        ${MX_PATH}/mx --java-home=${LABSJDK_HOME} build
        
        # Log the output of the build
        ls -l ${LABSJDK_HOME}  # List the contents of LABSJDK_HOME
        ls -l ${GRAALVM_HOME}  # List the contents of GRAALVM_HOME

        # Create a symbolic link to the GraalVM home directory
        ln -s $(${MX_PATH}/mx --java-home=${LABSJDK_HOME} graalvm-home) ${GRAALVM_HOME}
        
        # Verify if native-image exists
        # ls -l ${GRAALVM_HOME}/bin/native-image

    - name: Verify Build
      run: |
        cd graalvm
        ${MX_PATH}/mx --version
        ${GRAALVM_HOME}/bin/java -version
